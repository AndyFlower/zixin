package com.cul.culsite.dto;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

public class MCouponLogsDTOCriteria {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table CULSITE.M_COUPON_LOGS
     *
     * @mbggenerated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table CULSITE.M_COUPON_LOGS
     *
     * @mbggenerated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table CULSITE.M_COUPON_LOGS
     *
     * @mbggenerated
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table CULSITE.M_COUPON_LOGS
     *
     * @mbggenerated
     */
    public MCouponLogsDTOCriteria() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table CULSITE.M_COUPON_LOGS
     *
     * @mbggenerated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table CULSITE.M_COUPON_LOGS
     *
     * @mbggenerated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table CULSITE.M_COUPON_LOGS
     *
     * @mbggenerated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table CULSITE.M_COUPON_LOGS
     *
     * @mbggenerated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table CULSITE.M_COUPON_LOGS
     *
     * @mbggenerated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table CULSITE.M_COUPON_LOGS
     *
     * @mbggenerated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table CULSITE.M_COUPON_LOGS
     *
     * @mbggenerated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table CULSITE.M_COUPON_LOGS
     *
     * @mbggenerated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table CULSITE.M_COUPON_LOGS
     *
     * @mbggenerated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table CULSITE.M_COUPON_LOGS
     *
     * @mbggenerated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table CULSITE.M_COUPON_LOGS
     *
     * @mbggenerated
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andIdIsNull() {
            addCriterion("ID is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("ID is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(String value) {
            addCriterion("ID =", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(String value) {
            addCriterion("ID <>", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(String value) {
            addCriterion("ID >", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(String value) {
            addCriterion("ID >=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThan(String value) {
            addCriterion("ID <", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(String value) {
            addCriterion("ID <=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLike(String value) {
            addCriterion("ID like", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotLike(String value) {
            addCriterion("ID not like", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdIn(List<String> values) {
            addCriterion("ID in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<String> values) {
            addCriterion("ID not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(String value1, String value2) {
            addCriterion("ID between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(String value1, String value2) {
            addCriterion("ID not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andVoucherIdIsNull() {
            addCriterion("VOUCHER_ID is null");
            return (Criteria) this;
        }

        public Criteria andVoucherIdIsNotNull() {
            addCriterion("VOUCHER_ID is not null");
            return (Criteria) this;
        }

        public Criteria andVoucherIdEqualTo(String value) {
            addCriterion("VOUCHER_ID =", value, "voucherId");
            return (Criteria) this;
        }

        public Criteria andVoucherIdNotEqualTo(String value) {
            addCriterion("VOUCHER_ID <>", value, "voucherId");
            return (Criteria) this;
        }

        public Criteria andVoucherIdGreaterThan(String value) {
            addCriterion("VOUCHER_ID >", value, "voucherId");
            return (Criteria) this;
        }

        public Criteria andVoucherIdGreaterThanOrEqualTo(String value) {
            addCriterion("VOUCHER_ID >=", value, "voucherId");
            return (Criteria) this;
        }

        public Criteria andVoucherIdLessThan(String value) {
            addCriterion("VOUCHER_ID <", value, "voucherId");
            return (Criteria) this;
        }

        public Criteria andVoucherIdLessThanOrEqualTo(String value) {
            addCriterion("VOUCHER_ID <=", value, "voucherId");
            return (Criteria) this;
        }

        public Criteria andVoucherIdLike(String value) {
            addCriterion("VOUCHER_ID like", value, "voucherId");
            return (Criteria) this;
        }

        public Criteria andVoucherIdNotLike(String value) {
            addCriterion("VOUCHER_ID not like", value, "voucherId");
            return (Criteria) this;
        }

        public Criteria andVoucherIdIn(List<String> values) {
            addCriterion("VOUCHER_ID in", values, "voucherId");
            return (Criteria) this;
        }

        public Criteria andVoucherIdNotIn(List<String> values) {
            addCriterion("VOUCHER_ID not in", values, "voucherId");
            return (Criteria) this;
        }

        public Criteria andVoucherIdBetween(String value1, String value2) {
            addCriterion("VOUCHER_ID between", value1, value2, "voucherId");
            return (Criteria) this;
        }

        public Criteria andVoucherIdNotBetween(String value1, String value2) {
            addCriterion("VOUCHER_ID not between", value1, value2, "voucherId");
            return (Criteria) this;
        }

        public Criteria andOperationTypeIsNull() {
            addCriterion("OPERATION_TYPE is null");
            return (Criteria) this;
        }

        public Criteria andOperationTypeIsNotNull() {
            addCriterion("OPERATION_TYPE is not null");
            return (Criteria) this;
        }

        public Criteria andOperationTypeEqualTo(String value) {
            addCriterion("OPERATION_TYPE =", value, "operationType");
            return (Criteria) this;
        }

        public Criteria andOperationTypeNotEqualTo(String value) {
            addCriterion("OPERATION_TYPE <>", value, "operationType");
            return (Criteria) this;
        }

        public Criteria andOperationTypeGreaterThan(String value) {
            addCriterion("OPERATION_TYPE >", value, "operationType");
            return (Criteria) this;
        }

        public Criteria andOperationTypeGreaterThanOrEqualTo(String value) {
            addCriterion("OPERATION_TYPE >=", value, "operationType");
            return (Criteria) this;
        }

        public Criteria andOperationTypeLessThan(String value) {
            addCriterion("OPERATION_TYPE <", value, "operationType");
            return (Criteria) this;
        }

        public Criteria andOperationTypeLessThanOrEqualTo(String value) {
            addCriterion("OPERATION_TYPE <=", value, "operationType");
            return (Criteria) this;
        }

        public Criteria andOperationTypeLike(String value) {
            addCriterion("OPERATION_TYPE like", value, "operationType");
            return (Criteria) this;
        }

        public Criteria andOperationTypeNotLike(String value) {
            addCriterion("OPERATION_TYPE not like", value, "operationType");
            return (Criteria) this;
        }

        public Criteria andOperationTypeIn(List<String> values) {
            addCriterion("OPERATION_TYPE in", values, "operationType");
            return (Criteria) this;
        }

        public Criteria andOperationTypeNotIn(List<String> values) {
            addCriterion("OPERATION_TYPE not in", values, "operationType");
            return (Criteria) this;
        }

        public Criteria andOperationTypeBetween(String value1, String value2) {
            addCriterion("OPERATION_TYPE between", value1, value2, "operationType");
            return (Criteria) this;
        }

        public Criteria andOperationTypeNotBetween(String value1, String value2) {
            addCriterion("OPERATION_TYPE not between", value1, value2, "operationType");
            return (Criteria) this;
        }

        public Criteria andPreviousStatusIsNull() {
            addCriterion("PREVIOUS_STATUS is null");
            return (Criteria) this;
        }

        public Criteria andPreviousStatusIsNotNull() {
            addCriterion("PREVIOUS_STATUS is not null");
            return (Criteria) this;
        }

        public Criteria andPreviousStatusEqualTo(String value) {
            addCriterion("PREVIOUS_STATUS =", value, "previousStatus");
            return (Criteria) this;
        }

        public Criteria andPreviousStatusNotEqualTo(String value) {
            addCriterion("PREVIOUS_STATUS <>", value, "previousStatus");
            return (Criteria) this;
        }

        public Criteria andPreviousStatusGreaterThan(String value) {
            addCriterion("PREVIOUS_STATUS >", value, "previousStatus");
            return (Criteria) this;
        }

        public Criteria andPreviousStatusGreaterThanOrEqualTo(String value) {
            addCriterion("PREVIOUS_STATUS >=", value, "previousStatus");
            return (Criteria) this;
        }

        public Criteria andPreviousStatusLessThan(String value) {
            addCriterion("PREVIOUS_STATUS <", value, "previousStatus");
            return (Criteria) this;
        }

        public Criteria andPreviousStatusLessThanOrEqualTo(String value) {
            addCriterion("PREVIOUS_STATUS <=", value, "previousStatus");
            return (Criteria) this;
        }

        public Criteria andPreviousStatusLike(String value) {
            addCriterion("PREVIOUS_STATUS like", value, "previousStatus");
            return (Criteria) this;
        }

        public Criteria andPreviousStatusNotLike(String value) {
            addCriterion("PREVIOUS_STATUS not like", value, "previousStatus");
            return (Criteria) this;
        }

        public Criteria andPreviousStatusIn(List<String> values) {
            addCriterion("PREVIOUS_STATUS in", values, "previousStatus");
            return (Criteria) this;
        }

        public Criteria andPreviousStatusNotIn(List<String> values) {
            addCriterion("PREVIOUS_STATUS not in", values, "previousStatus");
            return (Criteria) this;
        }

        public Criteria andPreviousStatusBetween(String value1, String value2) {
            addCriterion("PREVIOUS_STATUS between", value1, value2, "previousStatus");
            return (Criteria) this;
        }

        public Criteria andPreviousStatusNotBetween(String value1, String value2) {
            addCriterion("PREVIOUS_STATUS not between", value1, value2, "previousStatus");
            return (Criteria) this;
        }

        public Criteria andCurrentStatusIsNull() {
            addCriterion("CURRENT_STATUS is null");
            return (Criteria) this;
        }

        public Criteria andCurrentStatusIsNotNull() {
            addCriterion("CURRENT_STATUS is not null");
            return (Criteria) this;
        }

        public Criteria andCurrentStatusEqualTo(String value) {
            addCriterion("CURRENT_STATUS =", value, "currentStatus");
            return (Criteria) this;
        }

        public Criteria andCurrentStatusNotEqualTo(String value) {
            addCriterion("CURRENT_STATUS <>", value, "currentStatus");
            return (Criteria) this;
        }

        public Criteria andCurrentStatusGreaterThan(String value) {
            addCriterion("CURRENT_STATUS >", value, "currentStatus");
            return (Criteria) this;
        }

        public Criteria andCurrentStatusGreaterThanOrEqualTo(String value) {
            addCriterion("CURRENT_STATUS >=", value, "currentStatus");
            return (Criteria) this;
        }

        public Criteria andCurrentStatusLessThan(String value) {
            addCriterion("CURRENT_STATUS <", value, "currentStatus");
            return (Criteria) this;
        }

        public Criteria andCurrentStatusLessThanOrEqualTo(String value) {
            addCriterion("CURRENT_STATUS <=", value, "currentStatus");
            return (Criteria) this;
        }

        public Criteria andCurrentStatusLike(String value) {
            addCriterion("CURRENT_STATUS like", value, "currentStatus");
            return (Criteria) this;
        }

        public Criteria andCurrentStatusNotLike(String value) {
            addCriterion("CURRENT_STATUS not like", value, "currentStatus");
            return (Criteria) this;
        }

        public Criteria andCurrentStatusIn(List<String> values) {
            addCriterion("CURRENT_STATUS in", values, "currentStatus");
            return (Criteria) this;
        }

        public Criteria andCurrentStatusNotIn(List<String> values) {
            addCriterion("CURRENT_STATUS not in", values, "currentStatus");
            return (Criteria) this;
        }

        public Criteria andCurrentStatusBetween(String value1, String value2) {
            addCriterion("CURRENT_STATUS between", value1, value2, "currentStatus");
            return (Criteria) this;
        }

        public Criteria andCurrentStatusNotBetween(String value1, String value2) {
            addCriterion("CURRENT_STATUS not between", value1, value2, "currentStatus");
            return (Criteria) this;
        }

        public Criteria andPreviousAmountIsNull() {
            addCriterion("PREVIOUS_AMOUNT is null");
            return (Criteria) this;
        }

        public Criteria andPreviousAmountIsNotNull() {
            addCriterion("PREVIOUS_AMOUNT is not null");
            return (Criteria) this;
        }

        public Criteria andPreviousAmountEqualTo(Long value) {
            addCriterion("PREVIOUS_AMOUNT =", value, "previousAmount");
            return (Criteria) this;
        }

        public Criteria andPreviousAmountNotEqualTo(Long value) {
            addCriterion("PREVIOUS_AMOUNT <>", value, "previousAmount");
            return (Criteria) this;
        }

        public Criteria andPreviousAmountGreaterThan(Long value) {
            addCriterion("PREVIOUS_AMOUNT >", value, "previousAmount");
            return (Criteria) this;
        }

        public Criteria andPreviousAmountGreaterThanOrEqualTo(Long value) {
            addCriterion("PREVIOUS_AMOUNT >=", value, "previousAmount");
            return (Criteria) this;
        }

        public Criteria andPreviousAmountLessThan(Long value) {
            addCriterion("PREVIOUS_AMOUNT <", value, "previousAmount");
            return (Criteria) this;
        }

        public Criteria andPreviousAmountLessThanOrEqualTo(Long value) {
            addCriterion("PREVIOUS_AMOUNT <=", value, "previousAmount");
            return (Criteria) this;
        }

        public Criteria andPreviousAmountIn(List<Long> values) {
            addCriterion("PREVIOUS_AMOUNT in", values, "previousAmount");
            return (Criteria) this;
        }

        public Criteria andPreviousAmountNotIn(List<Long> values) {
            addCriterion("PREVIOUS_AMOUNT not in", values, "previousAmount");
            return (Criteria) this;
        }

        public Criteria andPreviousAmountBetween(Long value1, Long value2) {
            addCriterion("PREVIOUS_AMOUNT between", value1, value2, "previousAmount");
            return (Criteria) this;
        }

        public Criteria andPreviousAmountNotBetween(Long value1, Long value2) {
            addCriterion("PREVIOUS_AMOUNT not between", value1, value2, "previousAmount");
            return (Criteria) this;
        }

        public Criteria andPreviousAmountUseTimesIsNull() {
            addCriterion("PREVIOUS_AMOUNT_USE_TIMES is null");
            return (Criteria) this;
        }

        public Criteria andPreviousAmountUseTimesIsNotNull() {
            addCriterion("PREVIOUS_AMOUNT_USE_TIMES is not null");
            return (Criteria) this;
        }

        public Criteria andPreviousAmountUseTimesEqualTo(Long value) {
            addCriterion("PREVIOUS_AMOUNT_USE_TIMES =", value, "previousAmountUseTimes");
            return (Criteria) this;
        }

        public Criteria andPreviousAmountUseTimesNotEqualTo(Long value) {
            addCriterion("PREVIOUS_AMOUNT_USE_TIMES <>", value, "previousAmountUseTimes");
            return (Criteria) this;
        }

        public Criteria andPreviousAmountUseTimesGreaterThan(Long value) {
            addCriterion("PREVIOUS_AMOUNT_USE_TIMES >", value, "previousAmountUseTimes");
            return (Criteria) this;
        }

        public Criteria andPreviousAmountUseTimesGreaterThanOrEqualTo(Long value) {
            addCriterion("PREVIOUS_AMOUNT_USE_TIMES >=", value, "previousAmountUseTimes");
            return (Criteria) this;
        }

        public Criteria andPreviousAmountUseTimesLessThan(Long value) {
            addCriterion("PREVIOUS_AMOUNT_USE_TIMES <", value, "previousAmountUseTimes");
            return (Criteria) this;
        }

        public Criteria andPreviousAmountUseTimesLessThanOrEqualTo(Long value) {
            addCriterion("PREVIOUS_AMOUNT_USE_TIMES <=", value, "previousAmountUseTimes");
            return (Criteria) this;
        }

        public Criteria andPreviousAmountUseTimesIn(List<Long> values) {
            addCriterion("PREVIOUS_AMOUNT_USE_TIMES in", values, "previousAmountUseTimes");
            return (Criteria) this;
        }

        public Criteria andPreviousAmountUseTimesNotIn(List<Long> values) {
            addCriterion("PREVIOUS_AMOUNT_USE_TIMES not in", values, "previousAmountUseTimes");
            return (Criteria) this;
        }

        public Criteria andPreviousAmountUseTimesBetween(Long value1, Long value2) {
            addCriterion("PREVIOUS_AMOUNT_USE_TIMES between", value1, value2, "previousAmountUseTimes");
            return (Criteria) this;
        }

        public Criteria andPreviousAmountUseTimesNotBetween(Long value1, Long value2) {
            addCriterion("PREVIOUS_AMOUNT_USE_TIMES not between", value1, value2, "previousAmountUseTimes");
            return (Criteria) this;
        }

        public Criteria andCurrentAmountIsNull() {
            addCriterion("CURRENT_AMOUNT is null");
            return (Criteria) this;
        }

        public Criteria andCurrentAmountIsNotNull() {
            addCriterion("CURRENT_AMOUNT is not null");
            return (Criteria) this;
        }

        public Criteria andCurrentAmountEqualTo(Long value) {
            addCriterion("CURRENT_AMOUNT =", value, "currentAmount");
            return (Criteria) this;
        }

        public Criteria andCurrentAmountNotEqualTo(Long value) {
            addCriterion("CURRENT_AMOUNT <>", value, "currentAmount");
            return (Criteria) this;
        }

        public Criteria andCurrentAmountGreaterThan(Long value) {
            addCriterion("CURRENT_AMOUNT >", value, "currentAmount");
            return (Criteria) this;
        }

        public Criteria andCurrentAmountGreaterThanOrEqualTo(Long value) {
            addCriterion("CURRENT_AMOUNT >=", value, "currentAmount");
            return (Criteria) this;
        }

        public Criteria andCurrentAmountLessThan(Long value) {
            addCriterion("CURRENT_AMOUNT <", value, "currentAmount");
            return (Criteria) this;
        }

        public Criteria andCurrentAmountLessThanOrEqualTo(Long value) {
            addCriterion("CURRENT_AMOUNT <=", value, "currentAmount");
            return (Criteria) this;
        }

        public Criteria andCurrentAmountIn(List<Long> values) {
            addCriterion("CURRENT_AMOUNT in", values, "currentAmount");
            return (Criteria) this;
        }

        public Criteria andCurrentAmountNotIn(List<Long> values) {
            addCriterion("CURRENT_AMOUNT not in", values, "currentAmount");
            return (Criteria) this;
        }

        public Criteria andCurrentAmountBetween(Long value1, Long value2) {
            addCriterion("CURRENT_AMOUNT between", value1, value2, "currentAmount");
            return (Criteria) this;
        }

        public Criteria andCurrentAmountNotBetween(Long value1, Long value2) {
            addCriterion("CURRENT_AMOUNT not between", value1, value2, "currentAmount");
            return (Criteria) this;
        }

        public Criteria andCurrentAmountUseTimesIsNull() {
            addCriterion("CURRENT_AMOUNT_USE_TIMES is null");
            return (Criteria) this;
        }

        public Criteria andCurrentAmountUseTimesIsNotNull() {
            addCriterion("CURRENT_AMOUNT_USE_TIMES is not null");
            return (Criteria) this;
        }

        public Criteria andCurrentAmountUseTimesEqualTo(Long value) {
            addCriterion("CURRENT_AMOUNT_USE_TIMES =", value, "currentAmountUseTimes");
            return (Criteria) this;
        }

        public Criteria andCurrentAmountUseTimesNotEqualTo(Long value) {
            addCriterion("CURRENT_AMOUNT_USE_TIMES <>", value, "currentAmountUseTimes");
            return (Criteria) this;
        }

        public Criteria andCurrentAmountUseTimesGreaterThan(Long value) {
            addCriterion("CURRENT_AMOUNT_USE_TIMES >", value, "currentAmountUseTimes");
            return (Criteria) this;
        }

        public Criteria andCurrentAmountUseTimesGreaterThanOrEqualTo(Long value) {
            addCriterion("CURRENT_AMOUNT_USE_TIMES >=", value, "currentAmountUseTimes");
            return (Criteria) this;
        }

        public Criteria andCurrentAmountUseTimesLessThan(Long value) {
            addCriterion("CURRENT_AMOUNT_USE_TIMES <", value, "currentAmountUseTimes");
            return (Criteria) this;
        }

        public Criteria andCurrentAmountUseTimesLessThanOrEqualTo(Long value) {
            addCriterion("CURRENT_AMOUNT_USE_TIMES <=", value, "currentAmountUseTimes");
            return (Criteria) this;
        }

        public Criteria andCurrentAmountUseTimesIn(List<Long> values) {
            addCriterion("CURRENT_AMOUNT_USE_TIMES in", values, "currentAmountUseTimes");
            return (Criteria) this;
        }

        public Criteria andCurrentAmountUseTimesNotIn(List<Long> values) {
            addCriterion("CURRENT_AMOUNT_USE_TIMES not in", values, "currentAmountUseTimes");
            return (Criteria) this;
        }

        public Criteria andCurrentAmountUseTimesBetween(Long value1, Long value2) {
            addCriterion("CURRENT_AMOUNT_USE_TIMES between", value1, value2, "currentAmountUseTimes");
            return (Criteria) this;
        }

        public Criteria andCurrentAmountUseTimesNotBetween(Long value1, Long value2) {
            addCriterion("CURRENT_AMOUNT_USE_TIMES not between", value1, value2, "currentAmountUseTimes");
            return (Criteria) this;
        }

        public Criteria andCreateUserIsNull() {
            addCriterion("CREATE_USER is null");
            return (Criteria) this;
        }

        public Criteria andCreateUserIsNotNull() {
            addCriterion("CREATE_USER is not null");
            return (Criteria) this;
        }

        public Criteria andCreateUserEqualTo(String value) {
            addCriterion("CREATE_USER =", value, "createUser");
            return (Criteria) this;
        }

        public Criteria andCreateUserNotEqualTo(String value) {
            addCriterion("CREATE_USER <>", value, "createUser");
            return (Criteria) this;
        }

        public Criteria andCreateUserGreaterThan(String value) {
            addCriterion("CREATE_USER >", value, "createUser");
            return (Criteria) this;
        }

        public Criteria andCreateUserGreaterThanOrEqualTo(String value) {
            addCriterion("CREATE_USER >=", value, "createUser");
            return (Criteria) this;
        }

        public Criteria andCreateUserLessThan(String value) {
            addCriterion("CREATE_USER <", value, "createUser");
            return (Criteria) this;
        }

        public Criteria andCreateUserLessThanOrEqualTo(String value) {
            addCriterion("CREATE_USER <=", value, "createUser");
            return (Criteria) this;
        }

        public Criteria andCreateUserLike(String value) {
            addCriterion("CREATE_USER like", value, "createUser");
            return (Criteria) this;
        }

        public Criteria andCreateUserNotLike(String value) {
            addCriterion("CREATE_USER not like", value, "createUser");
            return (Criteria) this;
        }

        public Criteria andCreateUserIn(List<String> values) {
            addCriterion("CREATE_USER in", values, "createUser");
            return (Criteria) this;
        }

        public Criteria andCreateUserNotIn(List<String> values) {
            addCriterion("CREATE_USER not in", values, "createUser");
            return (Criteria) this;
        }

        public Criteria andCreateUserBetween(String value1, String value2) {
            addCriterion("CREATE_USER between", value1, value2, "createUser");
            return (Criteria) this;
        }

        public Criteria andCreateUserNotBetween(String value1, String value2) {
            addCriterion("CREATE_USER not between", value1, value2, "createUser");
            return (Criteria) this;
        }

        public Criteria andCreateTimeIsNull() {
            addCriterion("CREATE_TIME is null");
            return (Criteria) this;
        }

        public Criteria andCreateTimeIsNotNull() {
            addCriterion("CREATE_TIME is not null");
            return (Criteria) this;
        }

        public Criteria andCreateTimeEqualTo(Date value) {
            addCriterion("CREATE_TIME =", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeNotEqualTo(Date value) {
            addCriterion("CREATE_TIME <>", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeGreaterThan(Date value) {
            addCriterion("CREATE_TIME >", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeGreaterThanOrEqualTo(Date value) {
            addCriterion("CREATE_TIME >=", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeLessThan(Date value) {
            addCriterion("CREATE_TIME <", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeLessThanOrEqualTo(Date value) {
            addCriterion("CREATE_TIME <=", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeIn(List<Date> values) {
            addCriterion("CREATE_TIME in", values, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeNotIn(List<Date> values) {
            addCriterion("CREATE_TIME not in", values, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeBetween(Date value1, Date value2) {
            addCriterion("CREATE_TIME between", value1, value2, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeNotBetween(Date value1, Date value2) {
            addCriterion("CREATE_TIME not between", value1, value2, "createTime");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table CULSITE.M_COUPON_LOGS
     *
     * @mbggenerated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table CULSITE.M_COUPON_LOGS
     *
     * @mbggenerated
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}